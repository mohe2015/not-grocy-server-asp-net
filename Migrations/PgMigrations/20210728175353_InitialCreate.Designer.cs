// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NotGrocy;

namespace not_grocy_server_asp_net.Migrations.PgMigrations
{
    [DbContext(typeof(NotGrocyContext))]
    [Migration("20210728175353_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("NotGrocy.Models.ApiKey", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("ApiKey1")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("api_key");

                    b.Property<byte[]>("Expires")
                        .HasColumnType("DATETIME")
                        .HasColumnName("expires");

                    b.Property<string>("KeyType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("key_type")
                        .HasDefaultValueSql("'default'");

                    b.Property<byte[]>("LastUsed")
                        .HasColumnType("DATETIME")
                        .HasColumnName("last_used");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("ApiKey1")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("api_keys");
                });

            modelBuilder.Entity("NotGrocy.Models.Battery", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT")
                        .HasColumnName("active")
                        .HasDefaultValueSql("1");

                    b.Property<long>("ChargeIntervalDays")
                        .HasColumnType("INTEGER")
                        .HasColumnName("charge_interval_days");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<string>("UsedIn")
                        .HasColumnType("TEXT")
                        .HasColumnName("used_in");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex(new[] { "Id", "Active" }, "ix_batteries_performance1");

                    b.ToTable("batteries");
                });

            modelBuilder.Entity("NotGrocy.Models.BatteryChargeCycle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("BatteryId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("battery_id");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<byte[]>("TrackedTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("tracked_time");

                    b.Property<long>("Undone")
                        .HasColumnType("TINYINT")
                        .HasColumnName("undone");

                    b.Property<byte[]>("UndoneTimestamp")
                        .HasColumnType("DATETIME")
                        .HasColumnName("undone_timestamp");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("battery_charge_cycles");
                });

            modelBuilder.Entity("NotGrocy.Models.Chore", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT")
                        .HasColumnName("active")
                        .HasDefaultValueSql("1");

                    b.Property<string>("AssignmentConfig")
                        .HasColumnType("TEXT")
                        .HasColumnName("assignment_config");

                    b.Property<string>("AssignmentType")
                        .HasColumnType("TEXT")
                        .HasColumnName("assignment_type");

                    b.Property<long>("ConsumeProductOnExecution")
                        .HasColumnType("TINYINT")
                        .HasColumnName("consume_product_on_execution");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<long?>("NextExecutionAssignedToUserId")
                        .HasColumnType("INT")
                        .HasColumnName("next_execution_assigned_to_user_id");

                    b.Property<string>("PeriodConfig")
                        .HasColumnType("TEXT")
                        .HasColumnName("period_config");

                    b.Property<long?>("PeriodDays")
                        .HasColumnType("INTEGER")
                        .HasColumnName("period_days");

                    b.Property<long>("PeriodInterval")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("period_interval")
                        .HasDefaultValueSql("1");

                    b.Property<string>("PeriodType")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("period_type");

                    b.Property<double?>("ProductAmount")
                        .HasColumnType("REAL")
                        .HasColumnName("product_amount");

                    b.Property<long?>("ProductId")
                        .HasColumnType("TINYINT")
                        .HasColumnName("product_id");

                    b.Property<long?>("Rollover")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT")
                        .HasColumnName("rollover")
                        .HasDefaultValueSql("0");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<long?>("TrackDateOnly")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT")
                        .HasColumnName("track_date_only")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex(new[] { "Id", "Active" }, "ix_chores_performance1");

                    b.ToTable("chores");
                });

            modelBuilder.Entity("NotGrocy.Models.ChoresLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("ChoreId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("chore_id");

                    b.Property<long?>("DoneByUserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("done_by_user_id");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<byte[]>("TrackedTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("tracked_time");

                    b.Property<long>("Undone")
                        .HasColumnType("TINYINT")
                        .HasColumnName("undone");

                    b.Property<byte[]>("UndoneTimestamp")
                        .HasColumnType("DATETIME")
                        .HasColumnName("undone_timestamp");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("chores_log");
                });

            modelBuilder.Entity("NotGrocy.Models.Equipment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("InstructionManualFileName")
                        .HasColumnType("TEXT")
                        .HasColumnName("instruction_manual_file_name");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("equipment");
                });

            modelBuilder.Entity("NotGrocy.Models.Location", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<long>("IsFreezer")
                        .HasColumnType("TINYINT")
                        .HasColumnName("is_freezer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("locations");
                });

            modelBuilder.Entity("NotGrocy.Models.MealPlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<byte[]>("Day")
                        .IsRequired()
                        .HasColumnType("DATE")
                        .HasColumnName("day");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT")
                        .HasColumnName("note");

                    b.Property<double?>("ProductAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("REAL")
                        .HasColumnName("product_amount")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("ProductId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("product_id");

                    b.Property<long?>("ProductQuId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("product_qu_id");

                    b.Property<long?>("RecipeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("recipe_id");

                    b.Property<long?>("RecipeServings")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("recipe_servings")
                        .HasDefaultValueSql("1");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<string>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("type")
                        .HasDefaultValueSql("'recipe'");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("meal_plan");
                });

            modelBuilder.Entity("NotGrocy.Models.PermissionHierarchy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<long?>("Parent")
                        .HasColumnType("INTEGER")
                        .HasColumnName("parent");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("permission_hierarchy");
                });

            modelBuilder.Entity("NotGrocy.Models.ProductBarcode", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<double?>("Amount")
                        .HasColumnType("REAL")
                        .HasColumnName("amount");

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("barcode");

                    b.Property<byte[]>("LastPrice")
                        .HasColumnType("DECIMAL(15, 2)")
                        .HasColumnName("last_price");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT")
                        .HasColumnName("note");

                    b.Property<long>("ProductId")
                        .HasColumnType("INT")
                        .HasColumnName("product_id");

                    b.Property<long?>("QuId")
                        .HasColumnType("INT")
                        .HasColumnName("qu_id");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<long?>("ShoppingLocationId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("shopping_location_id");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex(new[] { "Barcode" }, "ix_product_barcodes")
                        .IsUnique();

                    b.ToTable("product_barcodes");
                });

            modelBuilder.Entity("NotGrocy.Models.ProductGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("product_groups");
                });

            modelBuilder.Entity("NotGrocy.Models.QuantityUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("NamePlural")
                        .HasColumnType("TEXT")
                        .HasColumnName("name_plural");

                    b.Property<string>("PluralForms")
                        .HasColumnType("TEXT")
                        .HasColumnName("plural_forms");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("quantity_units");
                });

            modelBuilder.Entity("NotGrocy.Models.QuantityUnitConversion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<double>("Factor")
                        .HasColumnType("REAL")
                        .HasColumnName("factor");

                    b.Property<long>("FromQuId")
                        .HasColumnType("INT")
                        .HasColumnName("from_qu_id");

                    b.Property<long?>("ProductId")
                        .HasColumnType("INT")
                        .HasColumnName("product_id");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<long>("ToQuId")
                        .HasColumnType("INT")
                        .HasColumnName("to_qu_id");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("quantity_unit_conversions");
                });

            modelBuilder.Entity("NotGrocy.Models.Recipe", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long?>("BaseServings")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("base_servings")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<long?>("DesiredServings")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("desired_servings")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<long>("NotCheckShoppinglist")
                        .HasColumnType("TINYINT")
                        .HasColumnName("not_check_shoppinglist");

                    b.Property<string>("PictureFileName")
                        .HasColumnType("TEXT")
                        .HasColumnName("picture_file_name");

                    b.Property<long?>("ProductId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("product_id");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<string>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("type")
                        .HasDefaultValueSql("'normal'");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex(new[] { "Name", "Type" }, "ix_recipes");

                    b.ToTable("recipes");
                });

            modelBuilder.Entity("NotGrocy.Models.RecipesNesting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("IncludesRecipeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("includes_recipe_id");

                    b.Property<long>("RecipeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("recipe_id");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<long?>("Servings")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("servings")
                        .HasDefaultValueSql("1");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("RecipeId", "IncludesRecipeId")
                        .IsUnique();

                    b.ToTable("recipes_nestings");
                });

            modelBuilder.Entity("NotGrocy.Models.RecipesPo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<double>("Amount")
                        .HasColumnType("REAL")
                        .HasColumnName("amount");

                    b.Property<string>("IngredientGroup")
                        .HasColumnType("TEXT")
                        .HasColumnName("ingredient_group");

                    b.Property<long>("NotCheckStockFulfillment")
                        .HasColumnType("TINYINT")
                        .HasColumnName("not_check_stock_fulfillment");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT")
                        .HasColumnName("note");

                    b.Property<long>("OnlyCheckSingleUnitInStock")
                        .HasColumnType("TINYINT")
                        .HasColumnName("only_check_single_unit_in_stock");

                    b.Property<double>("PriceFactor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("REAL")
                        .HasColumnName("price_factor")
                        .HasDefaultValueSql("1");

                    b.Property<long>("ProductId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("product_id");

                    b.Property<long?>("QuId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("qu_id");

                    b.Property<long>("RecipeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("recipe_id");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<string>("VariableAmount")
                        .HasColumnType("TEXT")
                        .HasColumnName("variable_amount");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("recipes_pos");
                });

            modelBuilder.Entity("NotGrocy.Models.Session", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<byte[]>("Expires")
                        .HasColumnType("DATETIME")
                        .HasColumnName("expires");

                    b.Property<byte[]>("LastUsed")
                        .HasColumnType("DATETIME")
                        .HasColumnName("last_used");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<string>("SessionKey")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("session_key");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("SessionKey")
                        .IsUnique();

                    b.ToTable("sessions");
                });

            modelBuilder.Entity("NotGrocy.Models.ShoppingList", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<byte[]>("Amount")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DECIMAL(15, 2)")
                        .HasColumnName("amount")
                        .HasDefaultValueSql("0");

                    b.Property<long?>("Done")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("done")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT")
                        .HasColumnName("note");

                    b.Property<long?>("ProductId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("product_id");

                    b.Property<long?>("QuId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("qu_id");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<long?>("ShoppingListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("shopping_list_id")
                        .HasDefaultValueSql("1");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("shopping_list");
                });

            modelBuilder.Entity("NotGrocy.Models.ShoppingList1", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("shopping_lists");
                });

            modelBuilder.Entity("NotGrocy.Models.ShoppingLocation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("shopping_locations");
                });

            modelBuilder.Entity("NotGrocy.Models.Stock", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<byte[]>("Amount")
                        .IsRequired()
                        .HasColumnType("DECIMAL(15, 2)")
                        .HasColumnName("amount");

                    b.Property<byte[]>("BestBeforeDate")
                        .HasColumnType("DATE")
                        .HasColumnName("best_before_date");

                    b.Property<long?>("LocationId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("location_id");

                    b.Property<long>("Open")
                        .HasColumnType("TINYINT")
                        .HasColumnName("open");

                    b.Property<byte[]>("OpenedDate")
                        .HasColumnType("DATETIME")
                        .HasColumnName("opened_date");

                    b.Property<byte[]>("Price")
                        .HasColumnType("DECIMAL(15, 2)")
                        .HasColumnName("price");

                    b.Property<long>("ProductId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("product_id");

                    b.Property<byte[]>("PurchasedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("purchased_date")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<long?>("ShoppingLocationId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("shopping_location_id");

                    b.Property<string>("StockId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("stock_id");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex(new[] { "ProductId", "Open", "BestBeforeDate", "Amount" }, "ix_stock_performance1");

                    b.ToTable("stock");
                });

            modelBuilder.Entity("NotGrocy.Models.StockLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<byte[]>("Amount")
                        .IsRequired()
                        .HasColumnType("DECIMAL(15, 2)")
                        .HasColumnName("amount");

                    b.Property<byte[]>("BestBeforeDate")
                        .HasColumnType("DATE")
                        .HasColumnName("best_before_date");

                    b.Property<string>("CorrelationId")
                        .HasColumnType("TEXT")
                        .HasColumnName("correlation_id");

                    b.Property<long?>("LocationId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("location_id");

                    b.Property<byte[]>("OpenedDate")
                        .HasColumnType("DATETIME")
                        .HasColumnName("opened_date");

                    b.Property<byte[]>("Price")
                        .HasColumnType("DECIMAL(15, 2)")
                        .HasColumnName("price");

                    b.Property<long>("ProductId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("product_id");

                    b.Property<byte[]>("PurchasedDate")
                        .HasColumnType("DATE")
                        .HasColumnName("purchased_date");

                    b.Property<long?>("RecipeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("recipe_id");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<long?>("ShoppingLocationId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("shopping_location_id");

                    b.Property<long>("Spoiled")
                        .HasColumnType("INTEGER")
                        .HasColumnName("spoiled");

                    b.Property<string>("StockId")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("stock_id");

                    b.Property<long?>("StockRowId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("stock_row_id");

                    b.Property<string>("TransactionId")
                        .HasColumnType("TEXT")
                        .HasColumnName("transaction_id");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("transaction_type");

                    b.Property<long>("Undone")
                        .HasColumnType("TINYINT")
                        .HasColumnName("undone");

                    b.Property<byte[]>("UndoneTimestamp")
                        .HasColumnType("DATETIME")
                        .HasColumnName("undone_timestamp");

                    b.Property<byte[]>("UsedDate")
                        .HasColumnType("DATE")
                        .HasColumnName("used_date");

                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("user_id")
                        .HasDefaultValueSql("1");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("stock_log");
                });

            modelBuilder.Entity("NotGrocy.Models.Task", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long?>("AssignedToUserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("assigned_to_user_id");

                    b.Property<long?>("CategoryId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("category_id");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<long>("Done")
                        .HasColumnType("TINYINT")
                        .HasColumnName("done");

                    b.Property<byte[]>("DoneTimestamp")
                        .HasColumnType("DATETIME")
                        .HasColumnName("done_timestamp");

                    b.Property<byte[]>("DueDate")
                        .HasColumnType("DATETIME")
                        .HasColumnName("due_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("tasks");
                });

            modelBuilder.Entity("NotGrocy.Models.TaskCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("task_categories");
                });

            modelBuilder.Entity("NotGrocy.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("password");

                    b.Property<string>("PictureFileName")
                        .HasColumnType("TEXT")
                        .HasColumnName("picture_file_name");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("NotGrocy.Models.UserPermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("PermissionId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("permission_id");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("UserId", "PermissionId")
                        .IsUnique();

                    b.ToTable("user_permissions");
                });

            modelBuilder.Entity("NotGrocy.Models.UserSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("key");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<byte[]>("RowUpdatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_updated_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("user_id");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("UserId", "Key")
                        .IsUnique();

                    b.ToTable("user_settings");
                });

            modelBuilder.Entity("NotGrocy.Models.Userentity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("caption");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("IconCssClass")
                        .HasColumnType("TEXT")
                        .HasColumnName("icon_css_class");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<long>("ShowInSidebarMenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT")
                        .HasColumnName("show_in_sidebar_menu")
                        .HasDefaultValueSql("1");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("userentities");
                });

            modelBuilder.Entity("NotGrocy.Models.Userfield", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("caption");

                    b.Property<string>("Config")
                        .HasColumnType("TEXT")
                        .HasColumnName("config");

                    b.Property<string>("Entity")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("entity");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<long>("ShowAsColumnInTables")
                        .HasColumnType("TINYINT")
                        .HasColumnName("show_as_column_in_tables");

                    b.Property<long?>("SortNumber")
                        .HasColumnType("INTEGER")
                        .HasColumnName("sort_number");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Entity", "Name")
                        .IsUnique();

                    b.ToTable("userfields");
                });

            modelBuilder.Entity("NotGrocy.Models.UserfieldValue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("FieldId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("field_id");

                    b.Property<long>("ObjectId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("object_id");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("FieldId", "ObjectId")
                        .IsUnique();

                    b.ToTable("userfield_values");
                });

            modelBuilder.Entity("NotGrocy.Models.Userobject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<byte[]>("RowCreatedTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("row_created_timestamp")
                        .HasDefaultValueSql("datetime('now', 'localtime')");

                    b.Property<long>("UserentityId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("userentity_id");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("userobjects");
                });
#pragma warning restore 612, 618
        }
    }
}
